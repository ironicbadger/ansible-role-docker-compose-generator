---
- name: Ensure destination for compose file exists
  ansible.builtin.file:
    path: "{{ docker_compose_generator_output_path }}"
    state: directory
    mode: "0755"

- name: Find all compose files
  ansible.builtin.set_fact:
    compose_files: >-
      {{
        query('filetree', services_directory +
          (docker_compose_hostname | default(inventory_hostname))) |
        selectattr('state', 'eq', 'file') |
        selectattr('path', 'regex', '.ya?ml$') |
        list
      }}

- name: Extract services from compose files
  ansible.builtin.set_fact:
    extracted_services: >-
      {{
        extracted_services | default({}) |
        combine(
          (lookup('template', item.src) | from_yaml).services | default({})
        )
      }}
  loop: "{{ compose_files | sort(attribute='src') }}"
  vars:
    service_name: "{{ item.src | dirname | basename }}"
  when: service_name not in (disabled_compose_files | default([]))

- name: Extract volumes from compose files
  ansible.builtin.set_fact:
    extracted_volumes: >-
      {{
        extracted_volumes | default({}) |
        combine(
          (lookup('template', item.src) | from_yaml).volumes | default({})
        )
      }}
  loop: "{{ compose_files | sort(attribute='src') }}"
  vars:
    service_name: "{{ item.src | dirname | basename }}"
  when: service_name not in (disabled_compose_files | default([]))

- name: Extract networks from compose files
  ansible.builtin.set_fact:
    extracted_networks: >-
      {{
        extracted_networks | default({}) |
        combine(
          (lookup('template', item.src) | from_yaml).networks | default({})
        )
      }}
  loop: "{{ compose_files | sort(attribute='src') }}"
  vars:
    service_name: "{{ item.src | dirname | basename }}"
  when: service_name not in (disabled_compose_files | default([]))

- name: Extract configs from compose files
  ansible.builtin.set_fact:
    extracted_configs: >-
      {{
        extracted_configs | default({}) |
        combine(
          (lookup('template', item.src) | from_yaml).configs | default({})
        )
      }}
  loop: "{{ compose_files | sort(attribute='src') }}"
  vars:
    service_name: "{{ item.src | dirname | basename }}"
  when: service_name not in (disabled_compose_files | default([]))

- name: Extract secrets from compose files
  ansible.builtin.set_fact:
    extracted_secrets: >-
      {{
        extracted_secrets | default({}) |
        combine(
          (lookup('template', item.src) | from_yaml).secrets | default({})
        )
      }}
  loop: "{{ compose_files | sort(attribute='src') }}"
  vars:
    service_name: "{{ item.src | dirname | basename }}"
  when: service_name not in (disabled_compose_files | default([]))

- name: Build combined compose content
  ansible.builtin.set_fact:
    combined_compose: |
      # Generated by ironicbadger.docker-compose-generator
      # badger badger badger mushroom mushrooooom...

      {{ {'services': extracted_services} | to_nice_yaml(indent=2, width=1000, sort_keys=False) }}
      {{ {'networks': extracted_networks} | to_nice_yaml(indent=2, width=1000, sort_keys=False) }}
      {{ {'volumes': extracted_volumes} | to_nice_yaml(indent=2, width=1000, sort_keys=False) }}
      {{ {'configs': extracted_configs} | to_nice_yaml(indent=2, width=1000, sort_keys=False) }}
      {{ {'secrets': extracted_secrets} | to_nice_yaml(indent=2, width=1000, sort_keys=False) }}

- name: Write combined compose file
  ansible.builtin.copy:
    content: "{{ combined_compose }}"
    dest: "{{ docker_compose_generator_output_path }}/compose.yaml"
    owner: "{{ docker_compose_generator_uid }}"
    group: "{{ docker_compose_generator_gid }}"
    mode: "0644"

- name: Print combined compose content
  ansible.builtin.debug:
    msg: "{{ combined_compose }}"
