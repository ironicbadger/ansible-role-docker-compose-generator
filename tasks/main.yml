---
- name: Ensure destination for compose file exists
  ansible.builtin.file:
    path: "{{ docker_compose_generator_output_path }}"
    state: directory

- name: Find all compose files
  ansible.builtin.set_fact:
    compose_files: >-
      {{
        query('filetree', playbook_dir + '/services/' +
          (docker_compose_hostname | default(inventory_hostname))) |
        selectattr('state', 'eq', 'file') |
        selectattr('path', 'regex', '.ya?ml$') |
        list
      }}

- name: Build combined compose content
  ansible.builtin.set_fact:
    combined_compose: |
      # Generated by ironicbadger.docker-compose-generator
      # badger badger badger mushroom mushrooooom...

      services:
      {% for file in compose_files | sort(attribute='src') %}
      {% set service_name = file.src | dirname | basename %}
      {% if service_name not in (disabled_compose_files | default([])) %}
      {{ lookup('template', file.src)
         | regex_replace('^(---|services:)\s*\n*', '')
         | regex_replace('^', '  ') }}
      {% endif %}
      {% endfor %}

- name: Write combined compose file
  ansible.builtin.copy:
    content: "{{ combined_compose }}"
    dest: "{{ docker_compose_generator_output_path }}/{{ docker_compose_generator_output_filename }}"
    owner: "{{ docker_compose_generator_uid }}"
    group: "{{ docker_compose_generator_gid }}"
    mode: "0644"
